generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

model artist_metadata {
  artist_id       String            @id
  name            String?
  genres          String?
  popularity      String?
  followers       String?
  id              String?
  main_genre      String?
  secondary_genre String?
  artist_tracks   artist_tracks[]
  spotify_history spotify_history[]
  track_metadata  track_metadata[]

  @@index([main_genre], map: "idx_artist_metadata_main_genre")
  @@index([secondary_genre], map: "iidx_artist_metadata_secondary_genre")
  @@index([secondary_genre], map: "idx_artist_metadata_secondary_genre")
}

model spotify_history {
  id                   Int
  ts                   DateTime?        @db.Timestamp(6)
  username             Int?
  platform             String?
  ms_played            Int?
  conn_country         String?
  ip_addr_decrypted    String?
  user_agent_decrypted String?
  song                 String?
  artist               String?
  album                String?
  URI                  String?
  reason_start         String?
  reason_end           String?
  shuffle              Boolean?
  skipped              String?
  offline              String?
  offline_timestamp    Float?
  incognito_mode       Boolean?
  month                Int?             @db.SmallInt
  year                 Int              @db.SmallInt
  track_id             String?
  main_artist_id       String?
  percent_played       Float?
  artist_metadata      artist_metadata? @relation(fields: [main_artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)
  track_metadata       track_metadata?  @relation(fields: [track_id], references: [track_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id, year])
  @@index([main_artist_id], map: "idx_spotify_history_artist_id")
  @@index([track_id], map: "idx_spotify_history_track_id")
  @@index([album], map: "idx_spotify_history_album")
  @@index([main_artist_id], map: "idx_spotify_history_main_artist_id")
  @@index([month], map: "idx_spotify_history_month")
  @@index([year], map: "idx_spotify_history_year")
}

model track_metadata {
  track_id                     String            @id
  track_duration               Int?
  explicit                     String?
  popularity                   Int?
  main_artist                  String?
  main_artist_id               String?
  artists                      String?
  artist_id                    String?
  album_id                     String?
  album_release_date           String?
  album_release_date_precision String?
  album_type                   String?
  album_uri                    String?
  track_danceability           Float?
  track_energy                 Float?
  track_key                    Int?
  track_loudness               Float?
  track_mode                   Int?
  track_speechiness            Float?
  track_acousticness           Float?
  track_instrumentalness       Float?
  track_liveness               Float?
  track_valence                Float?
  track_tempo                  Float?
  track_duration_ms            Int?
  track_time_signature         Int?
  album_release_year           Int?
  album_decade                 String?
  artist_tracks                artist_tracks[]
  spotify_history              spotify_history[]
  artist_metadata              artist_metadata?  @relation(fields: [main_artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([main_artist_id], map: "idx_track_metadata_artist_id")
  @@index([album_decade], map: "idx_track_metadata_album_decade")
  @@index([album_id], map: "idx_track_metadata_album_id")
  @@index([album_release_year], map: "idx_track_metadata_album_release_year")
  @@index([main_artist_id], map: "idx_track_metadata_main_artist_id")
  @@index([track_duration], map: "idx_track_metadata_track_duration")
}

model artist_tracks {
  id              Int              @id @default(autoincrement())
  track_id        String?
  artist_id       String?
  is_main_artist  Boolean?
  artist_metadata artist_metadata? @relation(fields: [artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)
  track_metadata  track_metadata?  @relation(fields: [track_id], references: [track_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([artist_id], map: "idx_artist_tracks_artist_id")
  @@index([is_main_artist], map: "idx_artist_tracks_is_main_artist")
  @@index([track_id], map: "idx_artist_tracks_track_id")
}

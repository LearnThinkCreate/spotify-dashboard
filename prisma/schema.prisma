generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

model artist_metadata {
  artist_id       String            @id
  artist          String?
  main_genre      String?
  secondary_genre String?
  genres          String?
  popularity      Int?
  followers       Int?
  image_xl        Json?
  image_lg        Json?
  image_md        Json?
  image_sm        Json?
  images          Json?             @db.Json
  type            String?
  uri             String?
  external_url    String?
  href            String?
  artist_tracks   artist_tracks[]
  spotify_history spotify_history[]
  track_metadata  track_metadata[]

  @@index([main_genre], map: "idx_artist_metadata_main_genre")
  @@index([secondary_genre], map: "idx_artist_metadata_secondary_genre")
}

model artist_tracks {
  id              Int              @id @default(autoincrement())
  track_id        String?
  artist_id       String?
  is_main_artist  Boolean?
  artist_metadata artist_metadata? @relation(fields: [artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)
  track_metadata  track_metadata?  @relation(fields: [track_id], references: [track_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([artist_id], map: "idx_artist_tracks_artist_id")
  @@index([is_main_artist], map: "idx_artist_tracks_is_main_artist")
  @@index([track_id], map: "idx_artist_tracks_track_id")
}

view spotify_data_overview {
  id                 Int @unique
  ts                 DateTime  @db.Timestamp(6)
  song               String?
  artist             String?
  album              String?
  main_genre         String?
  secondary_genre    String?
  genre_list         String?
  artist_names       String?
  artist_ids         String?
  album_image_lg     Json?
  album_image_md     Json?
  album_image_sm     Json?
  album_images       Json?     @db.Json
  artist_image_xl    Json?
  artist_image_lg    Json?
  artist_image_md    Json?
  artist_image_sm    Json?
  artist_images      Json?     @db.Json
  track_id           String?
  artist_id          String?
  album_id           String?
  explicit           Boolean?
  song_popularity    Int?
  artist_popularity  Int?
  danceability       Float?
  energy             Float?
  key                Int?
  loudness           Float?
  mode               Int?
  speechiness        Float?
  acousticness       Float?
  instrumentalness   Float?
  liveness           Float?
  valence            Float?
  tempo              Float?
  duration_ms        Int?
  time_signature     Int?
  release_date       String?
  album_release_year Int?
  album_decade       String?
  month              DateTime? @db.Timestamp(6)
  year               DateTime? @db.Timestamp(6)
  genre_category     String?
  ms_played          Int?
  minutes_played     Float?
  hours_played       Float?
  day                DateTime? @db.Timestamp(6)
  reason_start       String?
  reason_end         String?
  shuffle            Boolean?

  @@index([artist_id], map: "idx_spotify_data_overview_artist_id")
  @@index([track_id], map: "idx_spotify_data_overview_track_id")
  @@index([album_id], map: "idx_spotify_data_overview_album_id")
  @@index([year], map: "idx_spotify_data_overview_year")
  @@index([month], map: "idx_spotify_data_overview_month")
  @@index([song], map: "idx_spotify_data_overview_song")
  @@index([artist], map: "idx_spotify_data_overview_artist")
  @@index([album], map: "idx_spotify_data_overview_album")
  @@index([main_genre], map: "idx_spotify_data_overview_main_genre")
  @@index([secondary_genre], map: "idx_spotify_data_overview_secondary_genre")
  @@index([genre_list], map: "idx_spotify_data_overview_genre_list")
  @@index([ts], map: "idx_spotify_data_overview_ts")
}

/// This table is a partition table and requires additional setup for migrations. Visit https://pris.ly/d/partition-tables for more info.
model spotify_history {
  id                   Int
  ts                   DateTime         @db.Timestamp(6)
  username             Int?
  platform             String?
  ms_played            Int?
  conn_country         String?
  ip_addr_decrypted    String?
  user_agent_decrypted String?
  song                 String?
  artist               String?
  album                String?
  URI                  String?
  reason_start         String?
  reason_end           String?
  shuffle              Boolean?
  skipped              String?
  offline              String?
  offline_timestamp    Float?
  incognito_mode       Boolean?
  month                Int?             @db.SmallInt
  year                 Int?             @db.SmallInt
  track_id             String?
  main_artist_id       String?
  percent_played       Float?
  artist_metadata      artist_metadata? @relation(fields: [main_artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)
  track_metadata       track_metadata?  @relation(fields: [track_id], references: [track_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id, ts])
  @@index([album], map: "idx_spotify_history_album")
  @@index([main_artist_id], map: "idx_spotify_history_main_artist_id")
  @@index([month], map: "idx_spotify_history_month")
  @@index([track_id], map: "idx_spotify_history_track_id")
  @@index([year], map: "idx_spotify_history_year")
}

model track_metadata {
  track_id                     String            @id
  song                         String?
  album                        String?
  explicit                     Boolean?
  song_popularity              Int?
  main_artist_id               String?
  artist_names                 String?
  artist_ids                   String?
  album_id                     String?
  album_release_date           String?
  album_release_date_precision String?
  album_external_url           String?
  album_href                   String?
  album_images                 Json?             @db.Json
  album_type                   String?
  album_uri                    String?
  danceability                 Float?
  energy                       Float?
  key                          Int?
  loudness                     Float?
  mode                         Int?
  speechiness                  Float?
  acousticness                 Float?
  instrumentalness             Float?
  liveness                     Float?
  valence                      Float?
  tempo                        Float?
  duration_ms                  Int?
  time_signature               Int?
  album_release_year           Int?
  album_decade                 String?
  image_lg                     Json?
  image_md                     Json?
  image_sm                     Json?
  analysis_url                 String?
  artist_tracks                artist_tracks[]
  spotify_history              spotify_history[]
  artist_metadata              artist_metadata?  @relation(fields: [main_artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([album_decade], map: "idx_track_metadata_album_decade")
  @@index([album_id], map: "idx_track_metadata_album_id")
  @@index([album_release_year], map: "idx_track_metadata_album_release_year")
  @@index([main_artist_id], map: "idx_track_metadata_main_artist_id")
}
